services:
  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: boosty_db
      POSTGRES_USER: boosty_user
      POSTGRES_PASSWORD: boosty_password
    ports:
      - "5432:5432"
    networks:
      - boosty_network

  # Django Backend
  backend:
    build: .
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - /app/__pycache__
      - /app/*/__pycache__
      - /app/*/*/__pycache__
    ports:
      - "8000:8000"
    env_file:
      - config.env
    environment:
      - DATABASE_URL=postgresql://boosty_user:boosty_password@db:5432/boosty_db
      - DJANGO_USE_FILE_WATCHER=true
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      - db
    networks:
      - boosty_network
    command: /bin/bash /app/startup.sh

  # React Frontend
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/build
    ports:
      - "3000:3000"
    environment:
      # Use localhost:8000 so browser makes direct requests (bypasses proxy Host header issue)
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    depends_on:
      - backend
    networks:
      - boosty_network
    command: npm start

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - boosty_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  boosty_network:
    driver: bridge
